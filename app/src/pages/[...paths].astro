---
import { getCollection } from 'astro:content';
import DefaultLayout from "../layout/default.astro";
import {getEntry, CollectionEntry} from "astro:content";

interface Frontmatter {
    cushionMessage?: string
}

export async function getStaticPaths(): Promise<{params: { paths: string }, props: { entry: CollectionEntry<string> }}[]> {
    const pathLists = await getCollection("articles")

    return pathLists.map(entry => {
        return {
            params: {
                paths: entry.slug,
            },
        }
    })
}

const post = await getEntry("articles", Astro.params.paths);

const {Content} = await post.render()

---
<style is:global>
    .light .cushion-message{
        background: #FAFAFA;
        color: #212121;
    }

    .dark .cushion-message{
        background: #212121;
        color: #FAFAFA;
    }
</style>
<DefaultLayout>
    {
        post?.data?.cushionMessage ?
            <div class="cushion-message absolute flex top-0 left-0 w-full h-full justify-center items-center">
                <div class="flex flex-col max-w-[80%]">
                    {post?.data?.cushionMessage}
                    <div class="flex flex-col mt-8">
                        <button id="go-adventure" class="border rounded py-4 px-2">OK, Go the adventure</button>
                        <button id="go-yahoo-kids" class="border rounded py-4 px-2 mt-8">Return Yahoo!JP Kids</button>
                    </div>
                </div>
            </div> : ""
    }

    <Content />
</DefaultLayout>

<script lang="ts">
    const cushionMessage = document.querySelector(".sushion-message")

    const adventureButton = document.querySelector("#go-adventure")
    const yahooKidsButton = document.querySelector("#go-yahoo-kids")

    adventureButton.addEventListener("click", () => {
        cushionMessage.classList.add("hidden")
    })

    yahooKidsButton.addEventListener("click", () => {
        window.location.href = "https://kids.yahoo.co.jp/"
    })
</script>
